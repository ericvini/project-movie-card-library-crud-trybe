{"ast":null,"code":"var _jsxFileName = \"/home/eric/sd-07-project-movie-card-library-crud/src/pages/NewMovie.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Loading } from '../components';\nimport MovieForm from '../components/MovieForm';\nimport * as movieAPI from '../services/movieAPI';\n\nclass NewMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: 'loading',\n      shouldRedirect: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async handleSubmit(newMovie) {\n    await movieAPI.createMovie(newMovie);\n    this.setState({\n      shouldRedirect: true,\n      status: ''\n    });\n  }\n\n  render() {\n    const {\n      shouldRedirect,\n      status\n    } = this.state;\n\n    if (shouldRedirect) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      });\n    }\n\n    if (status == 'loading') {\n      return /*#__PURE__*/React.createElement(Loading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"new-movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MovieForm, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default NewMovie;","map":{"version":3,"sources":["/home/eric/sd-07-project-movie-card-library-crud/src/pages/NewMovie.js"],"names":["React","Component","Redirect","Loading","MovieForm","movieAPI","NewMovie","constructor","props","state","status","shouldRedirect","handleSubmit","bind","newMovie","createMovie","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,eAAxB;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAO,KAAKC,QAAZ,MAA0B,sBAA1B;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAC/BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACTC,MAAAA,MAAM,EAAC,SADE;AAETC,MAAAA,cAAc,EAAC;AAFN,KAAX;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAED,QAAMD,YAAN,CAAmBE,QAAnB,EAA6B;AAC5B,UAAMT,QAAQ,CAACU,WAAT,CAAqBD,QAArB,CAAN;AACC,SAAKE,QAAL,CAAc;AAAEL,MAAAA,cAAc,EAAE,IAAlB;AAAyBD,MAAAA,MAAM,EAAC;AAAhC,KAAd;AACD;;AAEDO,EAAAA,MAAM,GAAG;AACP,UAAM;AAACN,MAAAA,cAAD;AAAiBD,MAAAA;AAAjB,QAAyB,KAAKD,KAApC;;AACA,QAAGE,cAAH,EAAkB;AACjB,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACA;;AACD,QAAID,MAAM,IAAE,SAAZ,EAAuB;AACtB,0BAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACA;;AACD,wBACE;AAAK,qBAAY,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAE,KAAKE,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AA5B8B;;AA8BjC,eAAeN,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Loading } from '../components';\n\nimport MovieForm from '../components/MovieForm';\nimport * as movieAPI from '../services/movieAPI';\n\nclass NewMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state={\n      status:'loading',\n      shouldRedirect:false,\n    }\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async handleSubmit(newMovie) {\n   await movieAPI.createMovie(newMovie);\n    this.setState({ shouldRedirect: true , status:''});\n  }\n\n  render() {\n    const {shouldRedirect, status}=this.state;\n    if(shouldRedirect){\n     return <Redirect to=\"/\"/>\n    }\n    if (status=='loading') {\n     return <Loading />\n    }\n    return (\n      <div data-testid=\"new-movie\">\n        <MovieForm onSubmit={this.handleSubmit} />\n      </div>\n    );\n  }\n}\nexport default NewMovie;\n"]},"metadata":{},"sourceType":"module"}