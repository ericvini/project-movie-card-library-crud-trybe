{"ast":null,"code":"var _jsxFileName = \"/home/eric/sd-07-project-movie-card-library-crud/src/pages/EditMovie.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { MovieForm, Loading } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie: [],\n      shouldRedirect: false,\n      status: 'loading'\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fetchMovie = this.fetchMovie.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchMovie();\n  }\n\n  fetchMovie() {\n    this.setState(async () => {\n      const movieId = this.props.match.params.id;\n      const movie = await movieAPI.getMovie(movieId);\n      this.setState({\n        movie,\n        status: ''\n      });\n    });\n  }\n\n  handleSubmit(updatedMovie) {\n    movieAPI.updateMovie(updatedMovie).then(() => this.setState({\n      shouldRedirect: true\n    }));\n  }\n\n  render() {\n    const {\n      status,\n      shouldRedirect,\n      movie\n    } = this.state;\n\n    if (shouldRedirect) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 14\n        }\n      });\n    }\n\n    if (status === 'loading') {\n      return /*#__PURE__*/React.createElement(Loading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"edit-movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MovieForm, {\n      movie: movie,\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nEditMovie.propTypes = {\n  match: PropTypes.arrayOf(PropTypes.object).isRequired\n};\nexport default EditMovie;","map":{"version":3,"sources":["/home/eric/sd-07-project-movie-card-library-crud/src/pages/EditMovie.js"],"names":["React","Component","Redirect","PropTypes","MovieForm","Loading","movieAPI","EditMovie","constructor","props","state","movie","shouldRedirect","status","handleSubmit","bind","fetchMovie","componentDidMount","setState","movieId","match","params","id","getMovie","updatedMovie","updateMovie","then","render","propTypes","arrayOf","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,eAAnC;AACA,OAAO,KAAKC,QAAZ,MAA0B,sBAA1B;;AAEA,MAAMC,SAAN,SAAwBN,SAAxB,CAAkC;AAChCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,cAAc,EAAE,KAFL;AAGXC,MAAAA,MAAM,EAAE;AAHG,KAAb;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AACDE,EAAAA,iBAAiB,GAAG;AAClB,SAAKD,UAAL;AACD;;AACDA,EAAAA,UAAU,GAAG;AACX,SAAKE,QAAL,CAAc,YAAY;AACxB,YAAMC,OAAO,GAAG,KAAKV,KAAL,CAAWW,KAAX,CAAiBC,MAAjB,CAAwBC,EAAxC;AACA,YAAMX,KAAK,GAAG,MAAML,QAAQ,CAACiB,QAAT,CAAkBJ,OAAlB,CAApB;AACA,WAAKD,QAAL,CAAc;AAAEP,QAAAA,KAAF;AAASE,QAAAA,MAAM,EAAE;AAAjB,OAAd;AACD,KAJD;AAKD;;AACDC,EAAAA,YAAY,CAACU,YAAD,EAAe;AACzBlB,IAAAA,QAAQ,CAACmB,WAAT,CAAqBD,YAArB,EACCE,IADD,CACM,MAAM,KAAKR,QAAL,CAAc;AAAEN,MAAAA,cAAc,EAAE;AAAlB,KAAd,CADZ;AAED;;AAEDe,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEd,MAAAA,MAAF;AAAUD,MAAAA,cAAV;AAA0BD,MAAAA;AAA1B,QAAoC,KAAKD,KAA/C;;AACA,QAAIE,cAAJ,EAAoB;AAClB,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,QAAIC,MAAM,KAAK,SAAf,EAA0B;AACxB,0BAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,wBACE;AAAK,qBAAY,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAEF,KAAlB;AAAyB,MAAA,QAAQ,EAAE,KAAKG,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAzC+B;;AA4ClCP,SAAS,CAACqB,SAAV,GAAsB;AACpBR,EAAAA,KAAK,EAAEjB,SAAS,CAAC0B,OAAV,CAAkB1B,SAAS,CAAC2B,MAA5B,EAAoCC;AADvB,CAAtB;AAGA,eAAexB,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { MovieForm, Loading } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie: [],\n      shouldRedirect: false,\n      status: 'loading',\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fetchMovie = this.fetchMovie.bind(this);\n  }\n  componentDidMount() {\n    this.fetchMovie();\n  }\n  fetchMovie() {\n    this.setState(async () => {\n      const movieId = this.props.match.params.id;\n      const movie = await movieAPI.getMovie(movieId);\n      this.setState({ movie, status: '' });\n    });\n  }\n  handleSubmit(updatedMovie) {\n    movieAPI.updateMovie(updatedMovie)\n    .then(() => this.setState({ shouldRedirect: true }));\n  }\n\n  render() {\n    const { status, shouldRedirect, movie } = this.state;\n    if (shouldRedirect) {\n      return <Redirect to=\"/\" />;\n    }\n\n    if (status === 'loading') {\n      return <Loading />;\n    }\n\n    return (\n      <div data-testid=\"edit-movie\">\n        <MovieForm movie={movie} onSubmit={this.handleSubmit} />\n      </div>\n    );\n  }\n}\n\nEditMovie.propTypes = {\n  match: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\nexport default EditMovie;\n"]},"metadata":{},"sourceType":"module"}