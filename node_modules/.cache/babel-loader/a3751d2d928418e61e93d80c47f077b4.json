{"ast":null,"code":"var _jsxFileName = \"/home/eric/sd-07-project-movie-card-library-crud/src/pages/MovieDetails.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as movieAPI from '../services/movieAPI';\nimport { Loading } from '../components';\n\nclass MovieDetails extends Component {\n  constructor() {\n    super();\n    this.state = {\n      movie: {},\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this.fecthMovie();\n  }\n\n  fetchMovies() {\n    this.setState(async () => {\n      const {\n        match\n      } = this.props;\n      const requestedMovies = await movieAPI.getMovie(match.params.id);\n      this.setState({\n        movie: requestedMovies,\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    // Change the condition to check the state\n    // if (true) return <Loading />;\n    const {\n      movie,\n      loading\n    } = this.state;\n    const {\n      id,\n      title,\n      storyline,\n      imagePath,\n      genre,\n      rating,\n      subtitle\n    } = movie;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"movie-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, loading ? /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"Movie Cover\",\n      src: `../${imagePath}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, `Title: ${title}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, `Subtitle: ${subtitle}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, `Storyline: ${storyline}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, `Genre: ${genre}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, `Rating: ${rating}`), /*#__PURE__*/React.createElement(Link, {\n      to: `/movies/${id}/edit`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, \"EDITAR\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, \"VOLTAR\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      onClick: () => movieAPI.deleteMovie(id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, \"DELETAR\")));\n  }\n\n}\n\nexport default MovieDetails;","map":{"version":3,"sources":["/home/eric/sd-07-project-movie-card-library-crud/src/pages/MovieDetails.js"],"names":["React","Component","Link","movieAPI","Loading","MovieDetails","constructor","state","movie","loading","componentDidMount","fecthMovie","fetchMovies","setState","match","props","requestedMovies","getMovie","params","id","render","title","storyline","imagePath","genre","rating","subtitle","deleteMovie"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,KAAKC,QAAZ,MAA0B,sBAA1B;AACA,SAASC,OAAT,QAAwB,eAAxB;;AAGA,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AACnCK,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAID;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,UAAL;AACD;;AACDC,EAAAA,WAAW,GAAG;AACZ,SAAKC,QAAL,CAAc,YAAY;AACxB,YAAM;AAACC,QAAAA;AAAD,UAAU,KAAKC,KAArB;AACA,YAAMC,eAAe,GAAG,MAAMb,QAAQ,CAACc,QAAT,CAAkBH,KAAK,CAACI,MAAN,CAAaC,EAA/B,CAA9B;AACA,WAAKN,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAAEQ,eAAT;AAA0BP,QAAAA,OAAO,EAAE;AAAnC,OAAd;AACD,KAJD;AAKD;;AACDW,EAAAA,MAAM,GAAG;AACP;AACA;AACA,UAAM;AAAEZ,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAqB,KAAKF,KAAhC;AACA,UAAM;AAAEY,MAAAA,EAAF;AAAME,MAAAA,KAAN;AAAaC,MAAAA,SAAb;AAAwBC,MAAAA,SAAxB;AAAmCC,MAAAA,KAAnC;AAA0CC,MAAAA,MAA1C;AAAkDC,MAAAA;AAAlD,QAA+DlB,KAArE;AAEA,wBACE;AAAK,qBAAY,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,OAAO,gBACN,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADM,gBAGN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAC,aAAT;AAAuB,MAAA,GAAG,EAAG,MAAKc,SAAU,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,UAASF,KAAM,EAApB,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,aAAYK,QAAS,EAA1B,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,cAAaJ,SAAU,EAA5B,CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,UAASE,KAAM,EAApB,CALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,WAAUC,MAAO,EAAtB,CANF,eAOE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,WAAUN,EAAG,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eASE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAa,MAAA,OAAO,EAAE,MAAMhB,QAAQ,CAACwB,WAAT,CAAqBR,EAArB,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBATF,CAJJ,CADF;AAqBD;;AA9CkC;;AAiDrC,eAAed,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as movieAPI from '../services/movieAPI';\nimport { Loading } from '../components';\n\n\nclass MovieDetails extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      movie: {},\n      loading: true,\n    };\n  }\n  componentDidMount() {\n    this.fecthMovie();\n  }\n  fetchMovies() {\n    this.setState(async () => {\n      const {match} = this.props;\n      const requestedMovies = await movieAPI.getMovie(match.params.id);\n      this.setState({ movie: requestedMovies, loading: false });\n    });\n  }\n  render() {\n    // Change the condition to check the state\n    // if (true) return <Loading />;\n    const { movie, loading } = this.state;\n    const { id, title, storyline, imagePath, genre, rating, subtitle } = movie;\n\n    return (\n      <div data-testid=\"movie-details\">\n        {loading ? (\n          <Loading />\n        ) : (\n          <div>\n            <img alt=\"Movie Cover\" src={`../${imagePath}`} />\n            <p>{`Title: ${title}`}</p>\n            <p>{`Subtitle: ${subtitle}`}</p>\n            <p>{`Storyline: ${storyline}`}</p>\n            <p>{`Genre: ${genre}`}</p>\n            <p>{`Rating: ${rating}`}</p>\n            <Link to={`/movies/${id}/edit`}>EDITAR</Link>\n            <Link to=\"/\">VOLTAR</Link>\n            <Link to=\"/\" onClick={() => movieAPI.deleteMovie(id)}>\n              DELETAR\n            </Link>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default MovieDetails;\n"]},"metadata":{},"sourceType":"module"}